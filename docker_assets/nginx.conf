user nginx;

worker_processes auto;
# worker_processes 4;

events {
    worker_connections 1024;
}

http {
    # client_max_body_size 1m;

    # keepalive_timeout 65;
    # sendfile on;
    # gzip_vary on;
    access_log off;

    tcp_nodelay on;
    default_type application/octet-stream;
    include /etc/nginx/mime.types;
        types {

            application/octet-stream unityweb;
            text/css                   css;
        }

    server {
        listen 80;

        root /usr/share/nginx/html;
        # include /etc/nginx/mime.types;
        types {

            application/octet-stream unityweb;
            text/css                   css;
        }
        index index.html;
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;
        #
        # Wide-open CORS config for nginx
        #
        location / {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                #
                # Custom headers and headers various browsers *should* be OK with but aren't
                #
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                #
                # Tell client that this pre-flight info is valid for 20 days
                #
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            if ($request_method = 'POST') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            }
            if ($request_method = 'GET') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            }
        }

        location = /50x.html {
            root /usr/share/nginx/html;
        }

        location /appui {
            try_files $uri /index.html;
        }
            location ~* \.(wasm.gz)$ {
            add_header Content-Encoding gzip;
            default_type "application/wasm";            
            }
            location ~* \.(wasm)$ {
            default_type "application/wasm";
            add_header Content-Type application/wasm;
            }
            location ~* \.(data.gz|symbols.json.gz)$ {
            add_header Content-Encoding gzip;
            add_header Content-Type application/octet-stream;
            }
            location ~* \.(js.gz)$ {
            add_header Content-Encoding gzip;
            default_type "application/javascript";
            }
            location ~* \.(js)$ {
            add_header Content-Type application/javascript;
            }


        location /Build/ {
            alias /usr/share/nginx/html/pthread/;
        }

        location ~ /\.ht {
            deny all;
        }
    }
}
